{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://amysoftai.com/schemas/template-format.json",
  "title": "Prompt Template Format Schema",
  "description": "Validation schema for prompt templates in Beyond the AI Plateau",
  "type": "object",
  "required": [
    "frontmatter",
    "template_structure"
  ],
  "properties": {
    "frontmatter": {
      "allOf": [
        {
          "$ref": "../metadata/content-metadata-schema.json"
        },
        {
          "properties": {
            "template_category": {
              "type": "string",
              "enum": [
                "context-mastery",
                "dynamic-planning",
                "code-evolution",
                "strategic-testing",
                "intelligent-review"
              ],
              "description": "Elite principle category"
            },
            "template_subcategory": {
              "type": "string",
              "description": "Specific use case within principle"
            },
            "use_case": {
              "type": "string",
              "minLength": 20,
              "maxLength": 200,
              "description": "Specific problem this template solves"
            },
            "target_scenario": {
              "type": "string",
              "minLength": 30,
              "maxLength": 300,
              "description": "When developers should use this template"
            },
            "effectiveness_rating": {
              "type": "number",
              "minimum": 1,
              "maximum": 5,
              "description": "Template effectiveness rating (1-5 scale)"
            },
            "testing_status": {
              "type": "string",
              "enum": ["untested", "basic-testing", "extensive-testing", "production-validated"],
              "description": "Level of template validation"
            },
            "complexity_level": {
              "type": "string",
              "enum": ["basic", "intermediate", "advanced", "expert"],
              "description": "Template complexity for users"
            }
          },
          "required": [
            "template_category",
            "use_case",
            "target_scenario",
            "complexity_level"
          ]
        }
      ]
    },
    "template_structure": {
      "type": "object",
      "required": [
        "template_body",
        "variables",
        "usage_instructions"
      ],
      "properties": {
        "context_setup": {
          "type": "object",
          "properties": {
            "required": {
              "type": "boolean",
              "description": "Whether context setup is required"
            },
            "instructions": {
              "type": "string",
              "minLength": 50,
              "description": "How to set up context for this template"
            },
            "context_variables": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "required": {
                    "type": "boolean"
                  },
                  "example": {
                    "type": "string"
                  }
                },
                "required": ["name", "description", "required"]
              }
            }
          }
        },
        "template_body": {
          "type": "string",
          "minLength": 100,
          "description": "The actual prompt template text"
        },
        "variables": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "description", "type"],
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^\\{[A-Z_][A-Z0-9_]*\\}$",
                "description": "Variable placeholder (e.g., {PROJECT_NAME})"
              },
              "description": {
                "type": "string",
                "minLength": 10,
                "description": "What this variable represents"
              },
              "type": {
                "type": "string",
                "enum": [
                  "text",
                  "code",
                  "file_path",
                  "technology_stack",
                  "framework",
                  "number",
                  "boolean",
                  "list"
                ],
                "description": "Type of input expected"
              },
              "required": {
                "type": "boolean",
                "description": "Whether this variable is required"
              },
              "default_value": {
                "type": "string",
                "description": "Default value if not provided"
              },
              "examples": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "maxItems": 5,
                "description": "Example values for this variable"
              },
              "validation_rules": {
                "type": "object",
                "properties": {
                  "min_length": {
                    "type": "integer"
                  },
                  "max_length": {
                    "type": "integer"
                  },
                  "pattern": {
                    "type": "string"
                  },
                  "allowed_values": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "usage_instructions": {
          "type": "object",
          "required": ["steps", "expected_outcome"],
          "properties": {
            "prerequisites": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "What needs to be ready before using template"
            },
            "steps": {
              "type": "array",
              "minItems": 3,
              "items": {
                "type": "object",
                "required": ["step_number", "instruction"],
                "properties": {
                  "step_number": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "instruction": {
                    "type": "string",
                    "minLength": 20
                  },
                  "tips": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "common_mistakes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "expected_outcome": {
              "type": "object",
              "required": ["description"],
              "properties": {
                "description": {
                  "type": "string",
                  "minLength": 50,
                  "description": "What result to expect from using template"
                },
                "success_indicators": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "How to know the template worked well"
                },
                "output_format": {
                  "type": "string",
                  "enum": [
                    "code",
                    "explanation",
                    "structured_response",
                    "step_by_step_plan",
                    "analysis",
                    "recommendations"
                  ]
                }
              }
            },
            "troubleshooting": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "problem": {
                    "type": "string"
                  },
                  "solution": {
                    "type": "string"
                  }
                },
                "required": ["problem", "solution"]
              }
            }
          }
        },
        "examples": {
          "type": "object",
          "required": ["basic_example"],
          "properties": {
            "basic_example": {
              "type": "object",
              "required": ["scenario", "input", "expected_output"],
              "properties": {
                "scenario": {
                  "type": "string",
                  "description": "Real-world scenario for this example"
                },
                "input": {
                  "type": "object",
                  "description": "Variable values for this example"
                },
                "expected_output": {
                  "type": "string",
                  "description": "What the AI should produce"
                },
                "actual_output": {
                  "type": "string",
                  "description": "Tested output from AI"
                }
              }
            },
            "advanced_examples": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "string"
                  },
                  "complexity_notes": {
                    "type": "string"
                  },
                  "input": {
                    "type": "object"
                  },
                  "expected_output": {
                    "type": "string"
                  }
                },
                "required": ["scenario", "input", "expected_output"]
              }
            }
          }
        },
        "customization_guide": {
          "type": "object",
          "properties": {
            "adaptation_instructions": {
              "type": "string",
              "description": "How to adapt template for different contexts"
            },
            "variable_modifications": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "context": {
                    "type": "string"
                  },
                  "modifications": {
                    "type": "string"
                  }
                },
                "required": ["context", "modifications"]
              }
            },
            "framework_specific_versions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "framework": {
                    "type": "string"
                  },
                  "modifications": {
                    "type": "string"
                  },
                  "additional_variables": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["framework", "modifications"]
              }
            }
          }
        }
      }
    },
    "validation_criteria": {
      "type": "object",
      "properties": {
        "template_effectiveness": {
          "type": "object",
          "properties": {
            "tested_scenarios": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of scenarios template was tested in"
            },
            "success_rate": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Percentage of successful template applications"
            },
            "user_feedback_score": {
              "type": "number",
              "minimum": 1,
              "maximum": 5,
              "description": "Average user feedback rating"
            }
          }
        },
        "technical_validation": {
          "type": "object",
          "properties": {
            "code_output_validity": {
              "type": "boolean",
              "description": "Generated code compiles/runs without errors"
            },
            "best_practices_compliance": {
              "type": "boolean",
              "description": "Output follows development best practices"
            },
            "framework_compatibility": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Frameworks/tools template works with"
            }
          }
        },
        "usability_requirements": {
          "type": "object",
          "properties": {
            "clear_instructions": {
              "type": "boolean",
              "description": "Instructions are clear and actionable"
            },
            "variable_examples": {
              "type": "boolean",
              "description": "All variables have examples"
            },
            "error_handling": {
              "type": "boolean",
              "description": "Template handles edge cases gracefully"
            }
          }
        }
      }
    }
  }
}